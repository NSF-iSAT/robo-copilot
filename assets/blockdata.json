{   
    "loops": [
    {
        "type": "controls_repeat_ext",
        "message0": "%{BKY_CONTROLS_REPEAT_TITLE}",
        "args0": [{
        "type": "input_value",
        "name": "TIMES",
        "check": "Number"
        }],
        "message1": "%{BKY_CONTROLS_REPEAT_INPUT_DO} %1",
        "args1": [{
        "type": "input_statement",
        "name": "DO"
        }],
        "previousStatement": null,
        "nextStatement": null,
        "style": "loop_blocks",
        "tooltip": "%{BKY_CONTROLS_REPEAT_TOOLTIP}",
        "helpUrl": "%{BKY_CONTROLS_REPEAT_HELPURL}",
        "description": "Block for repeat n times (external number)."
        
    },
    {
        "type": "controls_repeat",
        "message0": "%{BKY_CONTROLS_REPEAT_TITLE}",
        "args0": [{
        "type": "field_number",
        "name": "TIMES",
        "value": 10,
        "min": 0,
        "precision": 1
        }],
        "message1": "%{BKY_CONTROLS_REPEAT_INPUT_DO} %1",
        "args1": [{
        "type": "input_statement",
        "name": "DO"
        }],
        "previousStatement": null,
        "nextStatement": null,
        "style": "loop_blocks",
        "tooltip": "%{BKY_CONTROLS_REPEAT_TOOLTIP}",
        "helpUrl": "%{BKY_CONTROLS_REPEAT_HELPURL}",
        "description": " Block for repeat n times (internal number). The 'controls_repeat_ext' block is preferred as it is more flexible."    },
    {
        "type": "controls_whileUntil",
        "message0": "%1 %2",
        "args0": [
        {
            "type": "field_dropdown",
            "name": "MODE",
            "options": [
            ["%{BKY_CONTROLS_WHILEUNTIL_OPERATOR_WHILE}", "WHILE"],
            ["%{BKY_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL}", "UNTIL"]
            ]
        },
        {
            "type": "input_value",
            "name": "BOOL",
            "check": "Boolean"
        }
        ],
        "message1": "%{BKY_CONTROLS_REPEAT_INPUT_DO} %1",
        "args1": [{
        "type": "input_statement",
        "name": "DO"
        }],
        "previousStatement": null,
        "nextStatement": null,
        "style": "loop_blocks",
        "helpUrl": "%{BKY_CONTROLS_WHILEUNTIL_HELPURL}",
        "extensions": ["controls_whileUntil_tooltip"],
        "description": "Block for 'do while/until' loop."
    },
    {
        "type": "controls_for",
        "message0": "%{BKY_CONTROLS_FOR_TITLE}",
        "args0": [
        {
            "type": "input_value",
            "name": "VAR",
            "check": "Variable"
        },
        {
            "type": "input_value",
            "name": "FROM",
            "check": "Number",
            "align": "LEFT"
        },
        {
            "type": "input_value",
            "name": "TO",
            "check": "Number",
            "align": "LEFT"
        },
        {
            "type": "input_value",
            "name": "BY",
            "check": "Number",
            "align": "LEFT"
        }
        ],
        "message1": "%{BKY_CONTROLS_REPEAT_INPUT_DO} %1",
        "args1": [{
        "type": "input_statement",
        "name": "DO"
        }],
        "inputsInline": true,
        "previousStatement": null,
        "nextStatement": null,
        "style": "loop_blocks",
        "helpUrl": "%{BKY_CONTROLS_FOR_HELPURL}",
        "extensions": [
        "controls_for_tooltip"
        ],
        "description": "Block for 'for' loop."
    },
    {
        "type": "controls_forEach",
        "message0": "%{BKY_CONTROLS_FOREACH_TITLE}",
        "args0": [
        {
            "type": "input_value",
            "name": "VAR",
            "check": "Variable"
        },
        {
            "type": "input_value",
            "name": "LIST",
            "check": "Array"
        }
        ],
        "message1": "%{BKY_CONTROLS_REPEAT_INPUT_DO} %1",
        "args1": [{
        "type": "input_statement",
        "name": "DO"
        }],
        "inputsInline": true,
        "previousStatement": null,
        "nextStatement": null,
        "style": "loop_blocks",
        "helpUrl": "%{BKY_CONTROLS_FOREACH_HELPURL}",
        "extensions": [
        "controls_forEach_tooltip"
        ],
        "description": "Block for 'for each' loop"
    },
    {
        "type": "controls_flow_statements",
        "message0": "%1",
        "args0": [{
        "type": "field_dropdown",
        "name": "FLOW",
        "options": [
            ["%{BKY_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK}", "BREAK"],
            ["%{BKY_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE}", "CONTINUE"]
        ]
        }],
        "previousStatement": null,
        "style": "loop_blocks",
        "helpUrl": "%{BKY_CONTROLS_FLOW_STATEMENTS_HELPURL}",
        "extensions": [
        "controls_flow_tooltip",
        "controls_flow_in_loop_check"
        ],
        "description": "Block for flow statements: continue, break."
    }],
    "logic": [
        {
            "type": "logic_boolean",
            "message0": "%1",
            "args0": [
              {
                "type": "field_dropdown",
                "name": "BOOL",
                "options": [
                  ["%{BKY_LOGIC_BOOLEAN_TRUE}", "TRUE"],
                  ["%{BKY_LOGIC_BOOLEAN_FALSE}", "FALSE"]
                ]
              }
            ],
            "output": "Boolean",
            "style": "logic_blocks",
            "tooltip": "%{BKY_LOGIC_BOOLEAN_TOOLTIP}",
            "helpUrl": "%{BKY_LOGIC_BOOLEAN_HELPURL}"
          },
          {
            "type": "controls_ifelse",
            "message0": "%{BKY_CONTROLS_IF_MSG_IF} %1 %{BKY_CONTROLS_IF_MSG_THEN}",
            "args0": [
              {
                "type": "input_value",
                "name": "IF0",
                "check": "Boolean"
              }
            ],
            "message1": "%1",
            "args1": [
              {
                "type": "input_statement",
                "name": "DO0"
              }
            ],
            "message2": "%{BKY_CONTROLS_IF_MSG_ELSE}",
            "message3": "%1",
            "args3": [
              {
                "type": "input_statement",
                "name": "ELSE"
              }
            ],
            "previousStatement": null,
            "nextStatement": null,
            "style": "logic_blocks",
            "tooltip": "%{BKYCONTROLS_IF_TOOLTIP_2}",
            "helpUrl": "%{BKY_CONTROLS_IF_HELPURL}",
            "extensions": ["controls_if_tooltip"],
            "description": "If/else block that does not use a mutator."
          },
          {
            "type": "logic_compare",
            "message0": "%1 %2 %3",
            "args0": [
              {
                "type": "input_value",
                "name": "A"
              },
              {
                "type": "field_dropdown",
                "name": "OP",
                "options": [
                  ["=", "EQ"],
                  ["\u2260", "NEQ"],
                  ["\u200F<", "LT"],
                  ["\u200F\u2264", "LTE"],
                  ["\u200F>", "GT"],
                  ["\u200F\u2265", "GTE"]
                ]
              },
              {
                "type": "input_value",
                "name": "B"
              }
            ],
            "inputsInline": true,
            "output": "Boolean",
            "style": "logic_blocks",
            "helpUrl": "%{BKY_LOGIC_COMPARE_HELPURL}",
            "extensions": ["logic_compare", "logic_op_tooltip"],
            "description": "Block for comparison operator."
          },
          {
            "type": "logic_operation",
            "message0": "%1 %2 %3",
            "args0": [
              {
                "type": "input_value",
                "name": "A",
                "check": "Boolean"
              },
              {
                "type": "field_dropdown",
                "name": "OP",
                "options": [
                  ["%{BKY_LOGIC_OPERATION_AND}", "AND"],
                  ["%{BKY_LOGIC_OPERATION_OR}", "OR"]
                ]
              },
              {
                "type": "input_value",
                "name": "B",
                "check": "Boolean"
              }
            ],
            "inputsInline": true,
            "output": "Boolean",
            "style": "logic_blocks",
            "helpUrl": "%{BKY_LOGIC_OPERATION_HELPURL}",
            "extensions": ["logic_op_tooltip"],
            "description": "Block for logical operations: 'and', 'or'."
          },
          {
            "type": "logic_negate",
            "message0": "%{BKY_LOGIC_NEGATE_TITLE}",
            "args0": [
              {
                "type": "input_value",
                "name": "BOOL",
                "check": "Boolean"
              }
            ],
            "output": "Boolean",
            "style": "logic_blocks",
            "tooltip": "%{BKY_LOGIC_NEGATE_TOOLTIP}",
            "helpUrl": "%{BKY_LOGIC_NEGATE_HELPURL}"
          },
          {
            "type": "logic_null",
            "message0": "%{BKY_LOGIC_NULL}",
            "output": null,
            "style": "logic_blocks",
            "tooltip": "%{BKY_LOGIC_NULL_TOOLTIP}",
            "helpUrl": "%{BKY_LOGIC_NULL_HELPURL}"
          },
          {
            "type": "logic_ternary",
            "message0": "%{BKY_LOGIC_TERNARY_CONDITION} %1",
            "args0": [
              {
                "type": "input_value",
                "name": "IF",
                "check": "Boolean"
              }
            ],
            "message1": "%{BKY_LOGIC_TERNARY_IF_TRUE} %1",
            "args1": [
              {
                "type": "input_value",
                "name": "THEN"
              }
            ],
            "message2": "%{BKY_LOGIC_TERNARY_IF_FALSE} %1",
            "args2": [
              {
                "type": "input_value",
                "name": "ELSE"
              }
            ],
            "output": null,
            "style": "logic_blocks",
            "tooltip": "%{BKY_LOGIC_TERNARY_TOOLTIP}",
            "helpUrl": "%{BKY_LOGIC_TERNARY_HELPURL}",
            "extensions": ["logic_ternary"]
          }
    ]
}